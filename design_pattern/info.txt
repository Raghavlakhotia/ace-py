Design patterns are typical solutions to common problems
in software design. Each pattern is like a blueprint
that you can customize to solve a particular
design problem in your code.

Note: You should go for abstraction rather than implemenation.

In addition, all patterns can be categorized by their intent, or purpose. 
This book covers three main groups of patterns:

-- Creational patterns 
>> provide object creation mechanisms that increase flexibility and reuse of existing code.
[Done] 1. Singleton
[Done] 2. Factory method
[Done] 3. Abstract factory.
4. Builder
5. Prototype

-- Structural patterns 
>> explain how to assemble objects and classes into larger structures, while keeping these structures flexible and efficient.
Adpter
bridge
Composite
Decorator
Facade
Fly weight

-- Behavioral patterns 
>> take care of effective communication and the assignment of responsibilities between objects.

